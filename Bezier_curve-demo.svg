<?xml version="1.0" ?>
<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'>

<svg height="400px" width="400px" xmlns="http://www.w3.org/2000/svg" id="canvas"
	onload="init(evt)"
	onclick="click(evt)"
	onmousemove="motion(evt)"
>

	<path d="M50,100 C70,200 220,230 300,80" stroke="black" fill="none" stroke-width="1.5" id="curve" />
	<polyline points="50,100 70,200 220,230 300,80" stroke="blue" fill="none" stroke-width="0.5" id="control-line" />
	<circle cx="50"  cy="100" r="3" stroke="none" fill="red" id="cp0" />
	<circle cx="70 " cy="200" r="3" stroke="none" fill="red" id="cp1" />
	<circle cx="220" cy="230" r="3" stroke="none" fill="red" id="cp2" />
	<circle cx="300" cy=" 80" r="3" stroke="none" fill="red" id="cp3" />


<script type="text/javascript">
<![CDATA[
/*
	wm, 21.02.2007
 */
var svgns	= "http://www.w3.org/2000/svg";

var points = [50,100,70,200,220,230,300,80]
var point = null;

function init(evt) {
	svgdoc  = evt.target.ownerDocument;
	svgroot = svgdoc.documentElement;
}

function update() {
	var x0, y0, x1, y1, x2, y2, x3, y3;
	var item;

	[x0, y0, x1, y1, x2, y2, x3, y3] = points;
	svgdoc.getElementById('control-line').setAttributeNS(
		null, 'points', points.join(' ')
	);
	
	svgdoc.getElementById('curve').setAttributeNS(
		null, 'd', "M"+x0+","+y0+" C"+x1+","+y1+" "+x2+","+y2+" "+x3+","+y3
	);

	item = svgdoc.getElementById('cp0');
	item.setAttributeNS(null, 'cx', x0);
	item.setAttributeNS(null, 'cy', y0);

	item = svgdoc.getElementById('cp1');
	item.setAttributeNS(null, 'cx', x1);
	item.setAttributeNS(null, 'cy', y1);

	item = svgdoc.getElementById('cp2');
	item.setAttributeNS(null, 'cx', x2);
	item.setAttributeNS(null, 'cy', y2);

	item = svgdoc.getElementById('cp3');
	item.setAttributeNS(null, 'cx', x3);
	item.setAttributeNS(null, 'cy', y3);
}

function click(evt) {
	if (point != null) {
		// stop drag
		point = null
		return;
	}

	var x, y, i;
	var d, dx, dy, d_min;

	x = evt.pageX;
	y = evt.pageY;
	d_min = 30.0 * 30.0;
	for (i=0; i < points.length; i+=2) {
		dx = x - points[i];
		dy = y - points[i+1];
		d  = dx*dx + dy*dy
		if (d < d_min) {
			d_min = d;
			point = i/2;
		}
	}
}


function motion(evt) {
	if (point == null) return;
	points[point*2 + 0] = evt.pageX;
	points[point*2 + 1] = evt.pageY;
	update();
}

// ]]>
</script>
</svg>
<!--
	vim: ts=4 sw=4 nowrap ft=javascript
-->
