<?xml version="1.0" ?>
<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'>

<svg height="300px" width="700px" xmlns="http://www.w3.org/2000/svg" id="canvas"
	onload="init(evt)"
	onclick="onClick(evt)"
	onmousemove="onMouseMove(evt)"
>
	<title>Truncated octahedron (3D code by Wojciech Mula)</title>

<script type="text/javascript">
<![CDATA[
/*

	By Wojciech Mu³a, http://wm.ite.pl
	
	$Date: 2009-02-20 23:04:40 $, $Revision: 1.6 $

	Public domain

 */
var svgns	= "http://www.w3.org/2000/svg";
var anglex	= 0.0
var angley	= 0.0
var animate = false
var fps = 20

function init(evt) {
	svgdoc  = evt.target.ownerDocument;
	svgroot = svgdoc.documentElement;

	create_faces(vertices, indices);
	setTimeout("update_view(transform(vertices, anglex, angley), indices)", 50);
}

vertices = [
	[ 0,           0,          1.0540930],
	[ 0.63245550,  0,          0.8432740],
	[-0.42163700,  0.4714045,  0.8432740],
	[-0.07027284, -0.6285394,  0.8432740],
	[ 0.84327400,  0.4714045,  0.4216370],
	[ 0.56218270, -0.6285394,  0.6324555],
	[-0.91354690,  0.3142697,  0.4216370],
	[-0.21081850,  0.9428090,  0.4216370],
	[-0.56218270, -0.7856742,  0.4216370],
	[ 0.98381970,  0.3142697, -0.2108185],
	[ 0.42163700,  0.9428090,  0.2108185],
	[ 0.70272840, -0.7856742,  0        ],
	[-0.70272840,  0.7856742,  0        ],
	[-0.98381970, -0.3142697,  0.2108185],
	[-0.42163700, -0.9428090, -0.2108185],
	[ 0.56218270,  0.7856742, -0.4216370],
	[ 0.91354690, -0.3142697, -0.4216370],
	[ 0.21081850, -0.9428090, -0.4216370],
	[-0.56218270,  0.6285394, -0.6324555],
	[-0.84327400, -0.4714045, -0.4216370],
	[ 0.07027284,  0.6285394, -0.8432740],
	[ 0.42163700, -0.4714045, -0.8432740],
	[-0.6324555,   0,         -0.8432740],
	[ 0,           0,         -1.0540930]
];

indices = [
	// 6-sided faces
	[ 0, 1, 4,10, 7, 2],
	[ 0, 2, 6,13, 8, 3],
	[ 1, 5,11,16, 9, 4],
	[ 3, 8,14,17,11, 5],
	[ 6,12,18,22,19,13],
	[ 7,10,15,20,18,12],
	[ 9,16,21,23,20,15],
	[14,19,22,23,21,17],

	// 4-sided faces
	[ 0, 3, 5, 1],
	[ 2, 7,12, 6],
	[ 4, 9,15,10],
	[ 8,13,19,14],
	[11,17,21,16],
	[18,20,23,22],
];


function transform(vertices, anglex, angley) {
	var transformed = new Array(vertices.length);

	var i, x, y, z, x1, y1, z1;
	var cax = Math.cos(anglex);
	var sax = Math.sin(anglex);
	var cay = Math.cos(angley);
	var say = Math.sin(angley);

	for (i=0; i < vertices.length; i++) {
		[x, y, z] = vertices[i];

		x1 = x * cax - z * sax;
		z1 = x * sax + z * cax;
		y1 = y;

		x = x1;
		y = y1 * cay - z1 * say;
		z = y1 * say + z1 * cay;
		transformed[i] = [x, y, z];
	}
	return transformed;
}

function create_faces(vertices, indices) {
	var i, j, poly, d;
	var x, y, z;
	for (i=0; i < indices.length; i++) {
		poly = svgdoc.createElementNS(svgns, "polygon");
		d = "";
		for (j=0; j < indices[i].length; j++) {
			[x, y, z] = vertices[indices[i][j]];
			x = x * 100 + 200
			y = y * 100 + 200

			d = d + " " + x + "," + y;
		}

		poly.setAttributeNS(null, "points", d);
		poly.setAttributeNS(null, "id", "f" + i);
		poly.setAttributeNS(null, "stroke", "black");

		if (indices[i].length == 4) {
			poly.setAttributeNS(null, "fill",  "yellow");
			poly.setAttributeNS(null, "style", "opacity: 0.5");
		}
		else {
			poly.setAttributeNS(null, "fill",  "green");
			poly.setAttributeNS(null, "style", "opacity: 0.5");
		}

		svgroot.appendChild(poly);
	}
}

function update_view(vertices, indices) {
	var i, j, poly, d;
	var x, y, z, midz;
	var n;

	var faces = new Array(indices.length)
	for (i=0; i < indices.length; i++) {
		poly = svgdoc.getElementById("f" + i);
		d    = "";
		midz = 0.0
		n    = indices[i].length;
		for (j=0; j < n; j++) {
			[x, y, z] = vertices[indices[i][j]];
			x = x * 100 + 200
			y = y * 100 + 150

			d = d + " " + x + "," + y;
			midz += z;
		}
		if (n > 0) midz /= n;
		
		faces[i] = [midz, svgroot.removeChild(poly)];
		poly.setAttributeNS(null, "points", d);
	}

	function sort_fun(a, b) {
		if (a[0] < b[0]) return +1;
		if (a[0] > b[0]) return -1;
		return 0;
	}

	faces.sort(sort_fun);
	for (i=0; i < faces.length; i++) {
		svgroot.appendChild(faces[i][1]);
		//svgroot.forceRedraw();
	}
}

function rotate() {
	if (animate) {
		update_view(transform(vertices, anglex, angley), indices);
		anglex = anglex + 0.0625;
		angley = angley + 0.0625*2;
		setTimeout("rotate()", fps);
	}
}

function onClick(evt) {
	animate = !animate;
	if (animate)
		rotate();
	else
		clearTimeout();

}

function onMouseMove(evt) {
	if (animate) {
		clearTimeout();
		animate = false;
	}
	anglex = evt.pageX/100.0;
	angley = evt.pageY/100.0;
	setTimeout("update_view(transform(vertices, anglex, angley), indices)", fps);
}

// ]]>
</script>
</svg>
<!--
	vim: ts=4 sw=4 nowrap ft=javascript
-->
